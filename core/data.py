# core/data.py
# ---------------------------------------------------------------------------
import pandas as pd
import streamlit as st
from collections import defaultdict, Counter
from typing import Dict, List

from .models import FoodItem
from config import CONFIG


@st.cache_data
def load_food_database(file_path: str) -> Dict[str, List[FoodItem]]:
    """
    Load the food database (generated by the USDA client) into a dict that maps
    *CSV category names* → list[FoodItem].  We no longer pre-filter categories.
    """
    df = pd.read_csv(file_path)

    foods: Dict[str, List[FoodItem]] = defaultdict(list)

    for _, row in df.iterrows():
        category = row["category"]
        foods[category].append(
            FoodItem(
                name=f"{row['name']} ({row['serving_unit']})",
                calories=row["calories"],
                protein=row["protein"],
                carbs=row["carbs"],
                fat=row["fat"],
            )
        )

    return foods

def assign_food_emojis(foods: Dict[str, List[FoodItem]], n_top: int = 3) -> Dict[str, List[FoodItem]]:
    ...
    # -------- Build global top-N lists --------------------------------------
    top_protein = [f.name for f in _top_n(all_items, "protein")]
    top_carbs   = [f.name for f in _top_n(all_items, "carbs")]
    top_fat     = [f.name for f in _top_n(all_items, "fat")]
    top_micro   = []                              # optional / left empty
    top_cals    = [f.name for f in _top_n(all_items, "calories")]

    # -------- Superfoods: ≥ 2 nutrient lists (calories NOT counted) ---------
    appearance_counter = Counter(
        name
        for lst in [top_protein, top_carbs, top_fat, top_micro]  # ← calories removed
        for name in lst
    )
    superfoods = {name for name, cnt in appearance_counter.items() if cnt >= 2}

    # -------- Attach emojis --------------------------------------------------
    for food in all_items:
        is_high_calorie = food.name in top_cals
        is_top_nutrient = (
            food.name in top_protein
            or food.name in top_carbs
            or food.name in top_fat
            or food.name in top_micro
        )

        if food.name in superfoods:                    # 🥇
            food.emoji = "🥇"
        elif is_high_calorie and is_top_nutrient:      # 💥
            food.emoji = "💥"
        elif is_high_calorie:                          # 🔥
            food.emoji = "🔥"
        elif food.name in top_protein:                 # 💪
            food.emoji = "💪"
        elif food.name in top_carbs:                   # 🍚
            food.emoji = "🍚"
        elif food.name in top_fat:                     # 🥑
            food.emoji = "🥑"
        elif food.name in top_micro:                   # 🥦
            food.emoji = "🥦"
        else:
            food.emoji = ""
    return foods
